name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  gir:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout frida-gum
        uses: actions/checkout@v2
      - name: Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install \
            gobject-introspection \
            libdwarf-dev \
            libelf-dev \
            libgirepository1.0-dev \
            libglib2.0-dev \
            libjson-glib-dev \
            libsoup2.4-dev \
            libsqlite3-dev \
            libunwind-dev \
            ninja-build
          pip install meson==0.61.2
      - run: meson setup -Dgumpp=enabled -Dgumjs=enabled build
      - run: meson compile -C build

  windows-x86_64:
    runs-on: windows-latest
    steps:
      - name: Checkout frida-gum
        uses: actions/checkout@v2
      - name: Dependencies
        run: pip install meson==0.61.2 ninja
      - name: Environment
        uses: ilammy/msvc-dev-cmd@v1
      - name: Configure
        run: meson setup --default-library static -Dtests=enabled build
      - name: Build
        run: meson compile -C build
      - name: Test
        run: .\build\tests\gum-tests.exe

  macos-x86_64:
    runs-on: macos-latest
    steps:
      - name: Checkout frida-gum
        uses: actions/checkout@v2
      - name: Dependencies
        run: pip3 install meson==0.61.2 ninja
      - name: Configure
        run: meson setup --default-library static -Dtests=enabled build
      - name: Build
        run: meson compile -C build
      - name: Test
        run: ./build/tests/gum-tests

  linux-x86_64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout frida-gum
        uses: actions/checkout@v2
      - name: Dependencies
        run: pip install meson==0.61.2 ninja
      - name: Configure
        run: meson setup --default-library static -Dtests=enabled build
      - name: Build
        run: meson compile -C build
      - name: Test
        run: ./build/tests/gum-tests

  ios-arm64:
    runs-on: macos-latest
    steps:
      - name: Checkout frida-gum
        uses: actions/checkout@v2
      - name: Dependencies
        run: pip3 install meson==0.61.2 ninja
      - name: Configure
        run: |
          (
            echo "[constants]"
            echo "common_flags = ['-target', 'arm64-apple-ios8.0', '-isysroot', '$(xcrun --sdk iphoneos --show-sdk-path)']"
            echo ""
            echo "[binaries]"
            echo "c = ['$(xcrun --sdk iphoneos -f clang)'] + common_flags"
            echo "cpp = ['$(xcrun --sdk iphoneos -f clang++)'] + common_flags"
            echo "objc = ['$(xcrun --sdk iphoneos -f clang)', '-x', 'objective-c'] + common_flags"
            echo "objcpp = ['$(xcrun --sdk iphoneos -f clang++)', '-x', 'objective-c++'] + common_flags"
            echo "strip = '$(xcrun --sdk iphoneos -f strip)'"
            echo ""
            echo "[built-in options]"
            echo "c_link_args = ['-Wl,-dead_strip']"
            echo ""
            echo "[host_machine]"
            echo "system = 'darwin'"
            echo "cpu_family = 'aarch64'"
            echo "cpu = 'aarch64'"
            echo "endian = 'little'"
            echo ""
            echo "[properties]"
            echo "needs_exe_wrapper = true"
          ) > /tmp/cross.txt
          meson setup --default-library static -Dtests=enabled --cross-file /tmp/cross.txt build
      - name: Build
        run: meson compile -C build
      - name: Package
        run: tar -C build/tests -czf /tmp/runner.tar.gz gum-tests data/
      - name: Test
        uses: frida/corellium-action@v2
        with:
          endpoint: ${{ secrets.CORELLIUM_ENDPOINT }}
          username: ${{ secrets.CORELLIUM_USERNAME }}
          password: ${{ secrets.CORELLIUM_PASSWORD }}
          project: Frida
          instance: ios-14.8-arm64
          upload: /tmp/runner.tar.gz
          run: |
            set -ex
            cd /usr/local
            mkdir -p opt/frida
            cd opt/frida
            tar xf "$ASSET_PATH"
            ./gum-tests

  android-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout frida-gum
        uses: actions/checkout@v2
      - name: Dependencies
        run: |
          pip install meson==0.61.2 ninja
          sudo apt-get install gperf
      - name: Configure
        run: |
          (
            bindir=$ANDROID_NDK_LATEST_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin
            echo "[binaries]"
            echo "c = '$bindir/aarch64-linux-android21-clang'"
            echo "cpp = '$bindir/aarch64-linux-android21-clang++'"
            echo "strip = '$bindir/llvm-strip'"
            echo ""
            echo "[built-in options]"
            echo "c_args = ['-DANDROID', '-ffunction-sections', '-fdata-sections']"
            echo "c_link_args = ['-Wl,--gc-sections', '-Wl,-z,noexecstack', '-Wl,-z,relro', '-Wl,-z,now']"
            echo "cpp_link_args = ['-static-libstdc++']"
            echo ""
            echo "[host_machine]"
            echo "system = 'linux'"
            echo "cpu_family = 'aarch64'"
            echo "cpu = 'aarch64'"
            echo "endian = 'little'"
            echo ""
            echo "[properties]"
            echo "needs_exe_wrapper = true"
          ) > /tmp/cross.txt
          meson setup --default-library static -Dtests=enabled --cross-file /tmp/cross.txt build
      - name: Build
        run: meson compile -C build
      - name: Package
        run: tar -C build/tests -czf /tmp/runner.tar.gz gum-tests data/
      - name: Test
        uses: frida/corellium-action@v2
        with:
          endpoint: ${{ secrets.CORELLIUM_ENDPOINT }}
          username: ${{ secrets.CORELLIUM_USERNAME }}
          password: ${{ secrets.CORELLIUM_PASSWORD }}
          project: Frida
          instance: android-8.1.0-arm64
          upload: /tmp/runner.tar.gz
          run: |
            set -ex
            cd /data/local/tmp
            tar xf "$ASSET_PATH"
            LD_LIBRARY_PATH="/apex/com.android.art/lib64:/apex/com.android.runtime/lib64" ./gum-tests
